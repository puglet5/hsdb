<%= render "shared/errors", obj: @upload %>
<section class="bg-gray-50">
  <div class="container p-20 mx-auto max-w-screen-xl">
    <div class="flex justify-center mb-6 text-4xl font-semibold">
      Edit upload
    </div>
    <%= simple_form_for @upload, validate: true do |f| %>

      <!-- Attachment retention on form resubmit -->
      <% f.object.documents.each do |file| %>
        <%= f.hidden_field :documents, value: file.signed_id, multiple: true if file.persisted? %>
      <% end %>
      <!--  -->

      <%= render Forms::SectionLabelComponent.new().with_content("Info") %>
      <div class="grid grid-cols-1 gap-6 mb-6 lg:grid-cols-2">

        <div>
          <%= render Forms::LabelComponent.new(optional: false).with_content("Title") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :title, required: true, placeholder: "Mona Lisa by Leonardo da Vinci") %>
        </div>

        <div>
          <%= render Forms::LabelComponent.new(optional: false).with_content("Status") %>
          <%= f.input :status, default: @upload.status, collection: Upload.statuses.keys.map { |s| [s.humanize, s] }, input_html: {class: "block w-full px-0 text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-200 appearance-none py-2.5 focus:outline-none focus:ring-0 focus:border-gray-200 peer"}, hint: false, label: false %>
        </div>

        <div>
          <%= render Forms::LabelComponent.new().with_content("Style/Category") %>
          <%= f.input :style_id, default: @upload.style_id, collection: Style.all.map { |s| [s.name, s.id] }, :include_blank => "None", input_html: {class: "block w-full px-0 text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-200 appearance-none py-2.5 focus:outline-none focus:ring-0 focus:border-gray-200 peer"}, hint: false, label: false %>
        </div>

        <div>
          <%= render Forms::LabelComponent.new().with_content("Date") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :date, required: false, placeholder: "16th century, c. 1503â€“1506") %>
        </div>

      </div>

      <div class="mb-6">
        <%= render Forms::LabelComponent.new(optional: false).with_content("Short description") %>
        <%= render Forms::TextInputComponent.new(form: f, as: :text, field: :description, required: true, placeholder: "Description to be displayed on object cards", data: { controller: "textarea", action: 'input->textarea#resize', textarea_target: "input" }) %>
      </div>

      <div class="mb-6">
        <%= render Forms::LabelComponent.new().with_content("Detailed description") %>
        <%= render Forms::TextInputComponent.new(form: f, as: :rich_text_area, field: :body, required: true, placeholder: "Description to be displayed on object cards") %>
      </div>

      <% if @materials&.count.to_i > 0 %>
        <div class="mb-6">
          <%= render Forms::LabelComponent.new().with_content("Materials") %>
          <%= f.collection_select :material_ids, @materials, :id, :name, {}, multiple: true, data: { controller: "select" }, id: "select" %>
        </div>
      <% end %>

      <div class="grid grid-cols-2 mb-6 space-x-4">
        <div class="mb-4">
          <%= tag.div data: { controller: "datepicker" } do %>
            <%= render Forms::LabelComponent.new().with_content("Survey date") %>
            <%= f.input :survey_date, as: :string, label: false, hint: false, required: true, input_html: { class: "w-full p-4 pr-6 text-sm border-gray-300 rounded-lg shadow-sm focus:ring-1 focus:ring-primary-600 focus:border-primary-600", data: { datepicker_target: "input" } }, placeholder: "DD/MM/YYYY" %>
          <% end %>
        </div>
      </div>

      <%= render Forms::SectionLabelComponent.new().with_content("Files") %>
      <div class="grid grid-cols-1 gap-6 mb-6 lg:grid-cols-2">

        <div>
          <%= render Forms::LabelComponent.new().with_content("Thumbnail") %>
          <div class="flex">
            <div class="w-full">
              <%= render Forms::FileInputComponent.new(form: f, field: :thumbnail, required: false, direct: true, multiple: false, accept: "image/*", cls: "") %>
            </div>
            <% if @upload.thumbnail.attached? && @upload.thumbnail.persisted? %>
              <%= tag.div data: { controller: "modal" } do %>
                <%= tag.div data: { action:"click->modal#toggle" } do %>
                  <%= render TooltipComponent.new(tooltip: "Show attached thumbnail", cls: "ml-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-100", user: current_user) do %>
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-gray-600" viewBox="0 0 20 20" fill="currentColor">
                      <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd" />
                    </svg>
                  <% end %>
                <% end %>
                <%= render "thumbnail_modal", upload: @upload %>
              <% end %>
            <% end %>
          </div>
          <%= render Forms::PHelperComponent.new().with_content(".svg, .png, .jpg or .gif of any size") %>
        </div>

        <%= tag.div class: "row-span-2", data: { uppy: "upload[images_attributes][][image]", controller: "uploads", uploads_target: "div", uploads_settings_value: current_user.settings(:uploading).thumbnails, uploads_allowmultiple_value: true } do %>
          <%= render Forms::LabelComponent.new().with_content("Images") %>

          <div class="flex">
            <%= tag.div class: "flex items-center justify-center w-full bg-white border border-gray-300 rounded-lg cursor-pointer p-1.5 hover:bg-gray-100 py-auto", data: { uploads_target: "trigger" } do %>
              <div class="text-center">

                <div class="flex text-sm font-medium" id="uppy-text">
                  Add images
                  <div class="my-auto ml-2 font-normal text-gray-600">
                    (attached: <%= @images_count_err ? @images_count_pre.to_i : @images&.count %>)
                  </div>
                </div>

              </div>
            <% end %>

            <% if @images&.count.to_i > 0 %>
              <%= tag.div data: { controller: "modal" } do %>
                <%= tag.div data: { action:"click->modal#toggle" } do %>
                  <%= render TooltipComponent.new(tooltip: "Show/delete attached images", cls: "flex items-center justify-center my-auto ml-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-100", user: current_user) do %>
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                    </svg>
                  <% end %>
                <% end %>
                <%= render "images_modal", upload: @upload %>
              <% end %>
            <% end %>
          </div>
          <%= render Forms::PHelperComponent.new().with_content(".svg, .png, .jpg or .gif of any size") %>
        <% end %>

        <div>
          <%= render Forms::LabelComponent.new().with_content("Documents") %>
          <div class="flex">
            <div class="w-full">
              <%= render Forms::FileInputComponent.new(form: f, field: :documents, direct: true, multiple: true) %>
            </div>

            <% if @documents&.count.to_i > 0 %>
              <%= tag.div data: { controller: "modal" } do %>
                <%= tag.div data: { action:"click->modal#toggle" } do %>
                  <%= render TooltipComponent.new(tooltip: "Show attached documents", user: current_user, cls: "flex items-center justify-center my-auto ml-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-100") do %>
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2" />
                    </svg>
                  <% end %>
                <% end %>
                <%= render "documents_modal", upload: @upload %>
              <% end %>
            <% end %>
          </div>
          <%= render Forms::PHelperComponent.new().with_content(".pdf or any other format (max: 30 MB)") %>
        </div>
      </div>

      <%= render Forms::SectionLabelComponent.new().with_content("Metadata") %>

      <%= render Forms::LabelComponent.new(cls: "mb-4").with_content("Metadata") %>
      <div class="mb-4">
        <%= render Forms::TextInputComponent.new(form: f, as: :text, field: :metadata, required: false, placeholder: "Description to be displayed on object cards", data: { controller: "textarea", action: 'input->textarea#resize', 'textarea-target': 'input' }, v: JSON.is_json?(@upload.metadata) ? JSON.generate(@upload.metadata) : @upload.metadata) %>

        <% unless JSON.is_json?(@upload.metadata) %>
          <%= render Forms::PHelperComponent.new(cls: "!text-amber-600").with_content("Provided metadata doesn't appear to be valid. Check the contents or contact the admin. Invalid metadata can't be indexed or searched!") %>
        <% end %>
        <%= render Forms::PHelperComponent.new(cls: "") do %>
          Enter metadata to store additional properties in JSON format. Must be a valid JSON object, prefer single-word keys. Learn
          <a href="https://www.json.org/json-en.html" class="font-bold hover:underline">more</a>.
        <% end %>
      </div>

      <div class="flex">
        <%= render Forms::SubmitComponent.new(form: f).with_content("Save") %>
        <%= render Forms::BackButtonComponent.new(path: @upload).with_content("Back") %>
      </div>
    <% end %>

  </div>
</section>
