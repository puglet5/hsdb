<%= render "shared/errors", obj: @spectrum %>
<section>
  <div class="container p-20 mx-auto">
    <div class="flex justify-center mb-6 text-4xl font-semibold">
      Edit spectrum
    </div>
    <%= simple_form_for [@sample, @spectrum], validate: true do |f| %>

      <%= render Forms::SectionLabelComponent.new().with_content("Info") %>
      <div id="info" class="grid grid-cols-2 gap-4 mb-4">

        <div>
          <%= render Forms::LabelComponent.new(optional: false).with_content("Category/Type") %>
          <%= f.input :category, default: @spectrum.category, collection: Spectrum.categories.keys.map { |s| [s.humanize, s] }, input_html: { class: "w-full p-4 pr-6 text-sm border-gray-300 rounded-md shadow-sm focus:ring-1 focus:ring-primary-500 focus:border-primary-600 peer" }, hint: false, label: false %>
        </div>

        <div>
          <%= render Forms::LabelComponent.new(optional: false).with_content("Range") %>
          <%= f.input :range, default: @spectrum.range, collection: Spectrum.ranges.keys.map { |s| [s.humanize, s] }, input_html: { class: "w-full p-4 pr-6 text-sm border-gray-300 rounded-md shadow-sm focus:ring-1 focus:ring-primary-500 focus:border-primary-600 peer" }, hint: false, label: false %>
        </div>

        <div>
          <%= render Forms::LabelComponent.new(optional: false).with_content("Status") %>
          <%= f.input :status, default: @spectrum.status, collection: Spectrum.statuses.keys.map { |s| [s.humanize, s] }, input_html: { class: "w-full p-4 pr-6 text-sm border-gray-300 rounded-md shadow-sm focus:ring-1 focus:ring-primary-500 focus:border-primary-600 peer" }, hint: false, label: false %>
        </div>

        <div>
          <%= render Forms::LabelComponent.new(optional: false).with_content("File format") %>
          <%= f.input :format, default: @spectrum.format, collection: Spectrum.formats.keys.map { |s| [s.humanize, s] }, input_html: { class: "w-full p-4 pr-6 text-sm border-gray-300 rounded-md shadow-sm focus:ring-1 focus:ring-primary-500 focus:border-primary-600 peer" }, hint: false, label: false %>
        </div>

        <div class="col-span-2 mb-4">
          <%= render Forms::LabelComponent.new().with_content("Description") %>
          <%= render Forms::TextInputComponent.new(form: f, as: :rich_text_area, field: :description, required: false, placeholder: "General description") %>
        </div>

        <div class="col-span-2 mb-4">
          <%= render Forms::LabelComponent.new().with_content("Equipment") %>
          <%= render Forms::TextInputComponent.new(form: f, as: :rich_text_area, field: :equipment, required: false, placeholder: "Equipment description") %>
        </div>
      </div>

      <div id="files" class="mb-4">
        <%= render Forms::SectionLabelComponent.new().with_content("Files") %>
        <div class="grid grid-cols-2 gap-4">
          <%= tag.div class: "",
                data: {
                  uppy: "spectrum[file]",
                  controller: "uploads",
                  uploads_target: "div",
                  uploads_filetype_value: "files",
                  uploads_allowmultiple_value: false,
                  uploads_thumbnails_value: current_user.settings(:uploading).thumbnails
                  } do %>
            <%= render Forms::LabelComponent.new().with_content("Spectrum file") %>
            <%= tag.div class: "flex items-center justify-center w-full p-2 pr-6 text-sm bg-white border border-gray-300 rounded-md cursor-pointer w-fullbg-white hover:bg-gray-100 py-auto", data: { uploads_target: "trigger"} do %>
              <p class="font-medium text-center" id="uppy-text">
                Browse...
              </p>
            <% end %>
            <%= render Forms::PHelperComponent.new().with_content("Plain text spectra files of any format") %>
          <% end %>

          <%= tag.div class: "",
                data: {
                  uppy: "spectrum[settings]",
                  controller: "uploads",
                  uploads_target: "div",
                  uploads_filetype_value: "files",
                  uploads_allowmultiple_value: false,
                  uploads_thumbnails_value: current_user.settings(:uploading).thumbnails
                  } do %>
            <%= render Forms::LabelComponent.new().with_content("Equipment settings") %>
            <%= tag.div class: "flex items-center justify-center w-full p-2 pr-6 text-sm bg-white border border-gray-300 rounded-md cursor-pointer w-fullbg-white hover:bg-gray-100 py-auto", data: { uploads_target: "trigger"} do %>
              <p class="font-medium text-center" id="uppy-text">
                Browse...
              </p>
            <% end %>
            <%= render Forms::PHelperComponent.new().with_content("Equipment settings files of any text format") %>
          <% end %>
        </div>
      </div>

      <div id="metadata">
        <%= render Forms::SectionLabelComponent.new(cls: "text-gray-700").with_content("Metadata") %>
        <%= render Forms::LabelComponent.new().with_content("Metadata") %>
        <%= f.input :metadata, as: :text, label: false, hint: false, input_html: { class: "w-full p-4 pr-6 text-sm border-gray-300 rounded-md shadow-sm focus:ring-1 focus:ring-primary-500 focus:border-primary-600", data: { controller: "textarea", action: 'input->textarea#resize', 'textarea-target': 'input' }, value: display_metadata_value(@spectrum) } %>

        <div class="ml-2">

          <% unless JSON.is_json?(@spectrum.metadata) %>
            <%= render Forms::PHelperComponent.new(cls: "!text-amber-600").with_content("Provided metadata doesn't appear to be valid. Check the contents or contact the admin. Invalid metadata can't be indexed or searched!") %>
          <% end %>
          <%= render Forms::PHelperComponent.new(cls: "") do %>
            Enter metadata to store additional fields in JSON format. Learn
            <a href="https://www.json.org/json-en.html" class="font-bold hover:underline">more</a>.
          <% end %>
        </div>
      </div>

      <div class="flex mt-4">
        <%= render Forms::SubmitComponent.new(form: f).with_content("Save") %>
        <%= render Forms::BackButtonComponent.new(path: @sample).with_content("Back") %>
      </div>
    <% end %>

  </div>
</section>
