<%= render "shared/errors", obj: @sample %>
<section>
  <div class="container p-20 mx-auto">
    <div class="flex justify-center mb-6 text-4xl font-semibold">
      New sample
    </div>
    <%= simple_form_for @sample, validate: true do |f| %>

      <%= render Forms::SectionLabelComponent.new().with_content("Info") %>
      <div id="info" class="mb-4 grid grid-cols-2 gap-4">

        <div id="title" class="mb-4">
          <%= render Forms::LabelComponent.new(optional: false).with_content("Title") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :title, required: true, placeholder: "Sample name") %>
        </div>

        <div id="title" class="mb-4">
          <%= render Forms::LabelComponent.new(optional: true).with_content("Owner/Organization") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :owner, required: true, placeholder: "Jonh Doe") %>
        </div>

        <div id="title" class="mb-4">
          <%= render Forms::LabelComponent.new(optional: true).with_content("Origin/Manufacturer") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :origin, required: true, placeholder: "NASA Labs") %>
        </div>

        <div>
          <%= render Forms::LabelComponent.new(optional: false).with_content("Category/Type") %>
          <%= f.input :category, default: @sample.category, collection: Sample.categories.keys.map { |s| [s.humanize, s] }, input_html: { class: "w-full p-4 pr-6 text-sm border-gray-300 rounded-md shadow-sm focus:ring-1 focus:ring-primary-500 focus:border-primary-600 peer" }, hint: false, label: false %>
        </div>

        <div class="mb-4 col-span-2">
          <%= render Forms::LabelComponent.new().with_content("Description") %>
          <%= render Forms::TextInputComponent.new(form: f, as: :rich_text_area, field: :description, required: false, placeholder: "Description to be displayed on sample cards") %>
        </div>
      </div>

      <%= render Forms::SectionLabelComponent.new().with_content("Misc") %>
      <div id="misc" class="mb-4 grid grid-cols-2 gap-4">

        <div id="sku" class="mb-4">
          <%= render Forms::LabelComponent.new(optional: true).with_content("Sku") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :sku, required: false, placeholder: "000ABC") %>
        </div>

        <div id="color" class="mb-4">
          <%= render Forms::LabelComponent.new(optional: true).with_content("Color") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :color, required: false, placeholder: "Sky blue") %>
        </div>

        <div id="formula" class="mb-4">
          <%= render Forms::LabelComponent.new(optional: true).with_content("Chemical Formula") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :formula, required: false, placeholder: "CaO") %>
        </div>

        <div id="cas_no" class="mb-4">
          <%= render Forms::LabelComponent.new(optional: true).with_content("CAS Registry Number") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :cas_no, required: false, placeholder: "20548-54-3") %>
        </div>

        <div id="cas_name" class="mb-4">
          <%= render Forms::LabelComponent.new(optional: true).with_content("CAS Name") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :cas_name, required: false, placeholder: "Calcium sulfide") %>
        </div>

        <div id="survey_date" class="mb-4">
          <div class="mb-4">
            <%= tag.div data: { controller: "datepicker" } do %>
              <%= render Forms::LabelComponent.new().with_content("Survey date") %>
              <%= f.input :survey_date, as: :string, label: false, hint: false, required: true, input_html: { class: "w-full p-4 pr-6 text-sm border-gray-300 rounded-md shadow-sm focus:ring-1 focus:ring-primary-500 focus:border-primary-600", data: { datepicker_target: "input" } }, placeholder: "DD/MM/YYYY" %>
            <% end %>
          </div>
        </div>
      </div>

      <div id="files" class="mb-4">
        <%= render Forms::SectionLabelComponent.new().with_content("Files") %>
        <div class="grid grid-cols-2 gap-4">
          <%= tag.div class: "",
                data: {
                  uppy: "sample[spectra_attributes][][file]",
                  controller: "uploads",
                  uploads_target: "div",
                  uploads_filetype_value: "files",
                  uploads_allowedfiletypes_value: [".dpt", "text/*", ".raw", ".mon", ".csv", ".spectable", ".txt", ".dat"],
                  uploads_allowmultiple_value: true,
                  uploads_thumbnails_value: current_user.settings(:uploading).thumbnails
                  } do %>
            <%= render Forms::LabelComponent.new().with_content("Spectra files") %>
            <%= tag.div class: "flex items-center justify-center w-full p-2 pr-6 text-sm bg-white border border-gray-300 rounded-md cursor-pointer w-fullbg-white hover:bg-gray-100 py-auto", data: { uploads_target: "trigger"} do %>
              <%= tag.p class: "font-medium", data: { uploads_target: "text" }, id: "files-text" do %>
                Browse...
              <% end %>
            <% end %>
            <%= render Forms::PHelperComponent.new().with_content("Plain text spectra files of any format") %>
          <% end %>

          <%= tag.div class: "",
                data: {
                  uppy: "sample[images][]",
                  controller: "uploads",
                  uploads_target: "div",
                  uploads_filetype_value: "files",
                  uploads_allowmultiple_value: true,
                  uploads_thumbnails_value: current_user.settings(:uploading).thumbnails
                  } do %>
            <%= render Forms::LabelComponent.new().with_content("Images") %>
            <%= tag.div class: "flex items-center justify-center w-full p-2 pr-6 text-sm bg-white border border-gray-300 rounded-md cursor-pointer w-fullbg-white hover:bg-gray-100 py-auto", data: { uploads_target: "trigger"} do %>
              <%= tag.p class: "font-medium", data: { uploads_target: "text" }, id: "images-text" do %>
                Browse...
              <% end %>
            <% end %>
            <%= render Forms::PHelperComponent.new().with_content(".svg, .png, .jpg or .gif of any size") %>
          <% end %>

          <%= tag.div class: "",
                data: {
                  uppy: "sample[documents][]",
                  controller: "uploads",
                  uploads_target: "div",
                  uploads_filetype_value: "files",
                  uploads_allowmultiple_value: true,
                  uploads_thumbnails_value: current_user.settings(:uploading).thumbnails
                  } do %>
            <%= render Forms::LabelComponent.new().with_content("Documents") %>
            <%= tag.div class: "flex items-center justify-center w-full p-2 pr-6 text-sm bg-white border border-gray-300 rounded-md cursor-pointer w-fullbg-white hover:bg-gray-100 py-auto", data: { uploads_target: "trigger"} do %>
              <%= tag.p class: "font-medium", data: { uploads_target: "text" }, id: "documents-text" do %>
                Browse...
              <% end %>
            <% end %>
            <%= render Forms::PHelperComponent.new().with_content("Documents in .pdf or any other format (maximum file size: 30 MB)") %>
          <% end %>
        </div>
      </div>

      <div id="metadata">
        <%= render Forms::SectionLabelComponent.new().with_content("Metadata") %>
        <%= render Forms::LabelComponent.new().with_content("Metadata") %>
        <%= render Forms::TextInputComponent.new(form: f, as: :text, field: :metadata, required: false, placeholder: "Description to be displayed on object cards", data: { controller: "textarea", action: 'input->textarea#resize', 'textarea-target': 'input' }, v: display_metadata_value(@sample)) %>
        <%= render Forms::PHelperComponent.new().with_content("Must be a valid JSON object, prefer single-word keys ") %>
      </div>

      <div class="flex mt-4">
        <%= render Forms::SubmitComponent.new(form: f).with_content("Create") %>
        <%= render Forms::BackButtonComponent.new(path: (["new", "create"].include? params[:action]) ? :samples : @sample).with_content("Back") %>
      </div>
    <% end %>

  </div>
</section>
