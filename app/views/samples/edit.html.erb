<%= render "shared/errors", obj: @sample %>
<section class="bg-gray-50">
  <div class="container p-20 mx-auto">
    <div class="flex justify-center mb-6 text-4xl font-semibold">
      Edit sample
    </div>
    <%= simple_form_for @sample, validate: true do |f| %>

      <!-- Attachment retention on form resubmit -->
      <% f.object.documents.each do |file| %>
        <%= f.hidden_field :documents, value: file.signed_id, multiple: true if file.persisted? %>
      <% end %>

      <% f.object.images.each do |file| %>
        <%= f.hidden_field :images, value: file.signed_id, multiple: true if file.persisted? %>
      <% end %>
      <!--  -->

      <!-- Optimistic locking with lock_version -->
      <%= f.hidden_field :lock_version %>
      <!--  -->

      <%= render Forms::SectionLabelComponent.new().with_content("Info") %>
      <div id="info" class="mb-4 grid grid-cols-2 gap-4">

        <div id="title" class="mb-4">
          <%= render Forms::LabelComponent.new(optional: false).with_content("Title") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :title, required: true, placeholder: "Sample name") %>
        </div>

        <div id="title" class="mb-4">
          <%= render Forms::LabelComponent.new(optional: true).with_content("Owner/Organization") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :owner, required: true, placeholder: "Jonh Doe") %>
        </div>

        <div id="title" class="mb-4">
          <%= render Forms::LabelComponent.new(optional: true).with_content("Origin/Manufacturer") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :origin, required: true, placeholder: "NASA Labs") %>
        </div>

        <div>
          <%= render Forms::LabelComponent.new(optional: false).with_content("Category/Type") %>
          <%= f.input :category, default: @sample.category, collection: Sample.categories.keys.map { |s| [s.humanize, s] }, input_html: {class: "block w-full px-0 text-sm text-gray-700 bg-transparent border-0 border-b-2 border-gray-200 appearance-none py-2.5  focus:ring-0 focus:border-gray-200 peer"}, hint: false, label: false %>
        </div>

        <div class="mb-4 col-span-2">
          <%= render Forms::LabelComponent.new().with_content("Description") %>
          <%= render Forms::TextInputComponent.new(form: f, as: :rich_text_area, field: :description, required: false, placeholder: "Description to be displayed on sample cards") %>
        </div>
      </div>

      <%= render Forms::SectionLabelComponent.new().with_content("Misc") %>
      <div id="misc" class="mb-4 grid grid-cols-2 gap-4">

        <div id="sku" class="mb-4">
          <%= render Forms::LabelComponent.new(optional: true).with_content("Sku") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :sku, required: false, placeholder: "000ABC") %>
        </div>

        <div id="color" class="mb-4">
          <%= render Forms::LabelComponent.new(optional: true).with_content("Color") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :color, required: false, placeholder: "Sky blue") %>
        </div>

        <div id="formula" class="mb-4">
          <%= render Forms::LabelComponent.new(optional: true).with_content("Chemical Formula") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :formula, required: false, placeholder: "CaO") %>
        </div>

        <div id="cas_no" class="mb-4">
          <%= render Forms::LabelComponent.new(optional: true).with_content("CAS Registry Number") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :cas_no, required: false, placeholder: "20548-54-3") %>
        </div>

        <div id="cas_name" class="mb-4">
          <%= render Forms::LabelComponent.new(optional: true).with_content("CAS Name") %>
          <%= render Forms::TextInputComponent.new(form: f, field: :cas_name, required: false, placeholder: "Calcium sulfide") %>
        </div>

        <div id="survey_date" class="mb-4">
          <div class="mb-4">
            <%= tag.div data: { controller: "datepicker" } do %>
              <%= render Forms::LabelComponent.new().with_content("Survey date") %>
              <%= f.input :survey_date, as: :string, label: false, hint: false, required: true, input_html: { class: "w-full p-4 pr-6 text-sm border-gray-300 rounded-md shadow-sm focus:ring-1 focus:ring-primary-600 focus:border-primary-600", data: { datepicker_target: "input" }, value: @sample.survey_date&.strftime("%d/%m/%Y") }, placeholder: "DD/MM/YYYY" %>
            <% end %>
          </div>
        </div>
      </div>

      <div id="files" class="mb-4">
        <%= render Forms::SectionLabelComponent.new().with_content("Files") %>
        <div class="grid grid-cols-2 gap-4">
          <%= tag.div class: "",
                data: {
                  uppy: "sample[spectra_attributes][][file]",
                  controller: "uploads",
                  uploads_target: "div",
                  uploads_filetype_value: "files",
                  uploads_allowedfiletypes_value: [".dpt", "text/*", ".raw", ".mon", ".csv", ".spectable", ".txt"],
                  uploads_allowmultiple_value: true,
                  uploads_thumbnails_value: current_user.settings(:uploading).thumbnails
                  } do %>
            <%= render Forms::LabelComponent.new().with_content("Spectra files") %>
            <%= tag.div class: "flex items-center justify-center w-full p-2 pr-6 text-sm bg-white border border-gray-300 rounded-md cursor-pointer w-fullbg-white hover:bg-gray-100 py-auto", data: { uploads_target: "trigger"} do %>
              <p class="font-medium text-center" id="uppy-text">
                Browse...
              </p>
            <% end %>
            <%= render Forms::PHelperComponent.new().with_content("Plain text spectra files of any format") %>
          <% end %>

          <div id="images">
            <%= render Forms::LabelComponent.new().with_content("Images") %>
            <%= tag.div class: "flex",
                data: {
                  uppy: "sample[images][]",
                  controller: "uploads",
                  uploads_target: "div",
                  uploads_filetype_value: "files",
                  uploads_allowmultiple_value: true,
                  uploads_thumbnails_value: current_user.settings(:uploading).thumbnails
                  } do %>
              <%= tag.div class: "flex items-center justify-center w-full p-2 pr-6 text-sm bg-white border border-gray-300 rounded-md cursor-pointer w-fullbg-white hover:bg-gray-100 py-auto", data: { uploads_target: "trigger"} do %>
                <p class="font-medium text-center" id="uppy-text">
                  Browse...
                </p>
              <% end %>

              <% if @sample.images&.count.to_i > 0 %>
                <%= tag.div data: { controller: "modal" } do %>
                  <%= tag.div data: { action:"click->modal#toggle" } do %>
                    <%= render TooltipComponent.new(tooltip: "Show/delete attached images", cls: "flex items-center justify-center my-auto ml-2 bg-white border border-gray-300 rounded-md hover:bg-gray-100", user: current_user) do %>
                      <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                      </svg>
                    <% end %>
                  <% end %>
                  <%= render "images_modal", sample: @sample %>
                <% end %>
              <% end %>
            <% end %>
            <%= render Forms::PHelperComponent.new().with_content(".svg, .png, .jpg or .gif of any size") %>
          </div>

          <%= tag.div class: "",
                data: {
                  uppy: "sample[documents][]",
                  controller: "uploads",
                  uploads_target: "div",
                  uploads_filetype_value: "files",
                  uploads_allowmultiple_value: true,
                  uploads_thumbnails_value: current_user.settings(:uploading).thumbnails
                  } do %>
            <%= render Forms::LabelComponent.new().with_content("Documents") %>
            <%= tag.div class: "flex items-center justify-center w-full p-2 pr-6 text-sm bg-white border border-gray-300 rounded-md cursor-pointer w-fullbg-white hover:bg-gray-100 py-auto", data: { uploads_target: "trigger"} do %>
              <p class="font-medium text-center" id="uppy-text">
                Browse...
              </p>
            <% end %>
            <%= render Forms::PHelperComponent.new().with_content("Documents in .pdf or any other format (maximum file size: 30 MB)") %>
          <% end %>
        </div>
      </div>

      <%= render Forms::SectionLabelComponent.new(cls: "text-gray-700").with_content("Metadata") %>
      <%= render Forms::LabelComponent.new().with_content("Metadata") %>
      <%= f.input :metadata, as: :text, label: false, hint: false, input_html: { class: "w-full p-4 pr-6 text-sm border-gray-300 rounded-md shadow-sm focus:ring-1 focus:ring-primary-600 focus:border-primary-600", data: { controller: "textarea", action: 'input->textarea#resize', 'textarea-target': 'input' }, value: (JSON.is_json?(@sample.metadata) ? JSON.generate(@sample.metadata) : @sample.metadata)  } %>

      <div class="ml-2">

        <% unless JSON.is_json?(@sample.metadata) %>
          <%= render Forms::PHelperComponent.new(cls: "!text-amber-600").with_content("Provided metadata doesn't appear to be valid. Check the contents or contact the admin. Invalid metadata can't be indexed or searched!") %>
        <% end %>
        <%= render Forms::PHelperComponent.new(cls: "") do %>
          Enter metadata to store additional fields in JSON format. Learn
          <a href="https://www.json.org/json-en.html" class="font-bold hover:underline">more</a>.
        <% end %>
      </div>

      <div class="flex mt-4">
        <%= render Forms::SubmitComponent.new(form: f).with_content("Save") %>
        <%= render Forms::BackButtonComponent.new(path: @sample).with_content("Back") %>
      </div>
    <% end %>

  </div>
</section>
